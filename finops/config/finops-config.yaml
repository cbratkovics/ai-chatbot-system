# FinOps Cost Management Platform Configuration

# AWS Configuration
aws:
  regions:
    - us-east-1
    - us-west-2
    - eu-west-1
  cost_explorer:
    granularity: DAILY
    metrics:
      - BlendedCost
      - UsageQuantity
      - UnblendedCost
    group_by:
      - SERVICE
      - REGION
      - LINKED_ACCOUNT
  
# Cost Allocation Rules
cost_allocation:
  shared_cost_allocation:
    method: proportional  # proportional, equal, custom
    allocation_keys:
      - compute_usage
      - storage_usage
      - network_usage
  
  tagging_strategy:
    required_tags:
      - Environment
      - Team
      - Project
      - CostCenter
    auto_tag_patterns:
      environment:
        production: ["prod", "production"]
        development: ["dev", "development", "test"]
        staging: ["stage", "staging", "preprod"]
      team:
        backend: ["api", "backend", "server"]
        frontend: ["web", "frontend", "ui"]
        data: ["data", "analytics", "ml", "ai"]
        devops: ["ops", "infra", "deploy"]

# Anomaly Detection
anomaly_detection:
  statistical_method:
    window_size: 7  # days
    threshold_std_dev: 2.0
    min_data_points: 7
  
  severity_thresholds:
    critical:
      variance_percent: 100
      min_cost_impact: 1000
    high:
      variance_percent: 50
      min_cost_impact: 500
    medium:
      variance_percent: 25
      min_cost_impact: 100
    low:
      variance_percent: 10
      min_cost_impact: 50

# AI API Optimization
ai_api_optimization:
  providers:
    openai:
      base_url: "https://api.openai.com/v1"
      models:
        gpt-4:
          cost_per_1k_tokens: 0.03
          max_context_length: 8192
        gpt-3.5-turbo:
          cost_per_1k_tokens: 0.002
          max_context_length: 4096
    anthropic:
      base_url: "https://api.anthropic.com/v1"
      models:
        claude-3-opus:
          cost_per_1k_tokens: 0.015
          max_context_length: 200000
        claude-3-sonnet:
          cost_per_1k_tokens: 0.003
          max_context_length: 200000
    bedrock:
      models:
        claude-v2:
          cost_per_1k_tokens: 0.008
          max_context_length: 100000
  
  optimization_rules:
    - name: "High Volume Model Substitution"
      condition: "requests_per_day > 1000 and cost_per_token > 0.01"
      recommendation: "Consider switching to a more cost-effective model"
      potential_savings_percentage: 40
    
    - name: "Token Usage Optimization"
      condition: "avg_tokens_per_request > 2000"
      recommendation: "Optimize prompts to reduce token consumption"
      potential_savings_percentage: 20
    
    - name: "Request Caching"
      condition: "duplicate_request_percentage > 30"
      recommendation: "Implement semantic caching for similar requests"
      potential_savings_percentage: 30

# Savings Recommendations
savings_recommendations:
  right_sizing:
    cpu_utilization_threshold: 20  # percent
    memory_utilization_threshold: 30  # percent
    minimum_observation_days: 14
    potential_savings_percentage: 30
  
  reserved_instances:
    minimum_monthly_cost: 500
    minimum_utilization_percentage: 80
    commitment_terms: [1, 3]  # years
    potential_savings_percentage: 40
  
  storage_optimization:
    lifecycle_policies:
      ia_transition_days: 30
      glacier_transition_days: 90
      deep_archive_transition_days: 180
    potential_savings_percentage: 25
  
  spot_instances:
    suitable_workloads:
      - batch_processing
      - dev_environments
      - ci_cd_runners
    potential_savings_percentage: 70

# Chargeback Reporting
chargeback:
  billing_frequency: monthly
  allocation_methods:
    - direct_costs
    - shared_cost_allocation
    - usage_based_allocation
  
  report_formats:
    - pdf
    - csv
    - json
  
  cost_centers:
    engineering:
      teams: [backend, frontend, data, devops]
      overhead_allocation: 10  # percent
    
    operations:
      teams: [sre, security, compliance]
      overhead_allocation: 15  # percent

# Alerting and Notifications
alerting:
  email:
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    from_address: "finops@company.com"
    
  recipients:
    critical_alerts:
      - "cto@company.com"
      - "vp-engineering@company.com"
      - "finance-director@company.com"
    
    high_alerts:
      - "engineering-managers@company.com"
      - "devops-team@company.com"
    
    medium_alerts:
      - "team-leads@company.com"
  
  slack:
    webhook_url: "https://hooks.slack.com/services/..."
    channels:
      critical: "#finops-critical"
      high: "#finops-alerts"
      medium: "#finops-updates"
  
  alert_suppression:
    duplicate_window_minutes: 60
    max_alerts_per_hour: 10

# Data Storage and Processing
data:
  database:
    connection_string: "postgresql://finops:password@localhost:5432/finops"
    connection_pool_size: 10
    
  redis:
    host: "localhost"
    port: 6379
    database: 0
    key_prefix: "finops:"
    
  data_retention:
    raw_cost_data_days: 90
    aggregated_data_days: 365
    anomaly_data_days: 180
    recommendation_data_days: 90

# Performance and Scaling
performance:
  batch_size: 1000
  parallel_workers: 4
  api_rate_limits:
    aws_cost_explorer: 5  # requests per second
    provider_apis: 10     # requests per second
  
  caching:
    cost_data_ttl_minutes: 60
    recommendations_ttl_minutes: 1440  # 24 hours
    anomaly_cache_ttl_minutes: 30

# Compliance and Governance
compliance:
  data_classification: "confidential"
  encryption_at_rest: true
  encryption_in_transit: true
  audit_logging: true
  
  access_control:
    rbac_enabled: true
    roles:
      finops_admin:
        permissions: ["read", "write", "delete", "admin"]
      finops_analyst:
        permissions: ["read", "write"]
      finops_viewer:
        permissions: ["read"]
  
  cost_governance:
    budget_alerts:
      - threshold: 80
        action: "notify"
      - threshold: 95
        action: "alert_and_restrict"
      - threshold: 100
        action: "block_new_resources"

# Monitoring and Observability
monitoring:
  prometheus:
    metrics_port: 8090
    metrics_path: "/metrics"
    
  custom_metrics:
    - name: "finops_cost_allocation_operations_total"
      type: "counter"
      help: "Total cost allocation operations"
      labels: ["service", "status"]
    
    - name: "finops_savings_identified_dollars"
      type: "gauge"
      help: "Total savings identified in dollars"
      labels: ["category"]
    
    - name: "finops_anomaly_detections_total"
      type: "counter"
      help: "Cost anomalies detected"
      labels: ["severity", "service"]
  
  dashboards:
    - name: "Executive FinOps Dashboard"
      panels:
        - cost_trends
        - savings_opportunities
        - budget_variance
        - top_spending_services
    
    - name: "Technical FinOps Dashboard"
      panels:
        - anomaly_detection
        - resource_utilization
        - optimization_recommendations
        - api_usage_metrics

# Automation and Scheduling
automation:
  daily_pipeline:
    enabled: true
    schedule: "0 6 * * *"  # 6 AM daily
    tasks:
      - cost_analysis
      - anomaly_detection
      - resource_tagging
      - recommendations_generation
  
  weekly_reports:
    enabled: true
    schedule: "0 8 * * 1"  # 8 AM Monday
    recipients: ["finops-team@company.com"]
  
  monthly_chargeback:
    enabled: true
    schedule: "0 9 1 * *"  # 9 AM first day of month
    auto_send: false  # Require manual approval
  
  quarterly_reviews:
    enabled: true
    schedule: "0 10 1 1,4,7,10 *"  # Quarterly
    include_detailed_analysis: true