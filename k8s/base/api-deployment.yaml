apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-chatbot-api
  namespace: ai-chatbot
  labels:
    app: ai-chatbot
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-chatbot
      component: api
  template:
    metadata:
      labels:
        app: ai-chatbot
        component: api
    spec:
      containers:
      - name: api
        image: ghcr.io/cbratkovics/ai-chatbot-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-chatbot-secrets
              key: REDIS_PASSWORD
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-chatbot-secrets
              key: OPENAI_API_KEY
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-chatbot-secrets
              key: ANTHROPIC_API_KEY
        envFrom:
        - configMapRef:
            name: ai-chatbot-config
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: ai-chatbot-api
  namespace: ai-chatbot
  labels:
    app: ai-chatbot
    component: api
spec:
  selector:
    app: ai-chatbot
    component: api
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP