# Example Kubernetes Secret Configuration
# DO NOT commit actual secrets to Git!
# 
# To create real secrets:
# 1. Copy this file: cp secret.yaml.example secret.yaml
# 2. Replace placeholder values with actual base64-encoded secrets
# 3. Apply: kubectl apply -f secret.yaml
#
# Or use kubectl to create secrets directly:
# kubectl create secret generic ai-chatbot-secrets \
#   --from-literal=OPENAI_API_KEY='your-actual-key' \
#   --from-literal=ANTHROPIC_API_KEY='your-actual-key' \
#   --from-literal=REDIS_PASSWORD='your-redis-password' \
#   -n ai-chatbot

apiVersion: v1
kind: Secret
metadata:
  name: ai-chatbot-secrets
  namespace: ai-chatbot
type: Opaque
data:
  # Base64 encoded values (echo -n "value" | base64)
  OPENAI_API_KEY: eW91ci1vcGVuYWktYXBpLWtleS1oZXJl  # your-openai-api-key-here
  ANTHROPIC_API_KEY: eW91ci1hbnRocm9waWMtYXBpLWtleS1oZXJl  # your-anthropic-api-key-here
  REDIS_PASSWORD: eW91ci1yZWRpcy1wYXNzd29yZC1oZXJl  # your-redis-password-here

---
# For production, consider using External Secrets Operator:
# https://external-secrets.io/
#
# Example with External Secrets:
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: ai-chatbot-secrets
#   namespace: ai-chatbot
# spec:
#   secretStoreRef:
#     name: vault-backend
#     kind: SecretStore
#   target:
#     name: ai-chatbot-secrets
#   data:
#   - secretKey: OPENAI_API_KEY
#     remoteRef:
#       key: secret/data/ai-chatbot
#       property: openai_api_key
#   - secretKey: ANTHROPIC_API_KEY
#     remoteRef:
#       key: secret/data/ai-chatbot
#       property: anthropic_api_key